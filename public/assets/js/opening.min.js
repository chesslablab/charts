const script=document.getElementById("theScript"),scheme=script.getAttribute("data-scheme"),host=script.getAttribute("data-host"),port=script.getAttribute("data-port"),movetext=document.getElementById("movetext"),charts=document.getElementById("charts"),allEqual=e=>e.every(t=>t===e[0]);document.getElementById("spinner").style.display="block",fetch(`${scheme}://${host}:${port}/api/heuristics`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({movetext:movetext.innerHTML})}).then(e=>e.json()).then(e=>{e.evalNames.forEach((t,a)=>{let l=e.balance.map((e,t)=>e[a]);if(!allEqual(l)){let n=document.createElement("div"),i=document.createElement("canvas");n.appendChild(i),charts.appendChild(n),new Chart(i,{type:"line",data:{labels:l,datasets:[{label:t,data:l,borderWidth:4,tension:.25,borderColor:"#0a0a0a"}]},options:{animation:!1,elements:{point:{radius:0}},scales:{y:{ticks:{display:!1},grid:{display:!1},border:{display:!1},beginAtZero:!0,min:-1.1,max:1.1},x:{ticks:{display:!1},grid:{display:!1},border:{display:!1}}},plugins:{legend:{position:"bottom",labels:{boxWidth:0,font:{size:16}}}}}})}})}).catch(e=>{alert("Whoops! Something went wrong, please try again.")}).finally(()=>{document.getElementById("spinner").style.display="none",document.getElementById("downloadBtn").style.display="block"}),document.getElementById("downloadBtn").onclick=e=>{e.preventDefault(),html2canvas(document.getElementById("charts")).then(e=>{let t=document.createElement("a");t.href=e.toDataURL("image/jpeg"),t.download="chessvisual.jpeg",t.click()})};
